syntax="proto2";

package wirepas.proto.gateway_api;

import "config_message.proto";
import "data_message.proto";
import "otap_message.proto";

message WirepasMessage {
    optional StatusEvent status_event = 1;
    optional GetConfigsReq get_configs_req = 2;
    optional GetConfigsResp get_configs_resp = 3;
    optional SetConfigReq set_config_req = 4;
    optional SetConfigResp set_config_resp = 5;
    optional SendPacketReq send_packet_req = 6;
    optional SendPacketResp send_packet_resp = 7;
    optional PacketReceivedEvent packet_received_event = 8;
    optional GetScratchpadStatusReq get_scratchpad_status_req = 9;
    optional GetScratchpadStatusResp get_scratchpad_status_resp = 10;
    optional UploadScratchpadReq upload_scratchpad_req = 11;
    optional UploadScratchpadResp upload_scratchpad_resp = 12;
    optional ProcessScratchpadReq process_scratchpad_req = 13;
    optional ProcessScratchpadResp process_scratchpad_resp = 14;
    optional GetGwInfoReq get_gateway_info_req = 15;
    optional GetGwInfoResp get_gateway_info_resp = 16;
    optional SetScratchpadTargetAndActionReq set_scratchpad_target_and_action_req = 17;
    optional SetScratchpadTargetAndActionResp set_scratchpad_target_and_action_resp = 18;
}

message CustomerMessage {
    // Customer name is needed to avoid any collision between different customer implementation
    required string customer_name = 1;
    // Can be freely used for enhancing API by customers
}

message GenericMessage {
    optional WirepasMessage wirepas = 1;
    optional CustomerMessage customer = 2;
}